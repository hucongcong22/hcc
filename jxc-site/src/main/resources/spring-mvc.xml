<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd  
                        http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd
                        http://www.springframework.org/schema/mvc  
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
                        http://www.springframework.org/schema/aop
         http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		 http://www.springframework.org/schema/beans
		 http://www.springframework.org/schema/beans/spring-beans.xsd
		 ">
    <!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
    <context:component-scan base-package="com.aifule.jxc.site.web.controller"/>

    <aop:aspectj-autoproxy proxy-target-class="true"/>

    <!--避免IE执行AJAX时，返回JSON出现下载文件 -->
    <bean id="jsonConverter"
          class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>application/json;charset=UTF-8</value>
            </list>
        </property>
        <!-- <property name="objectMapper" ref="customObjectMapper"></property> -->
    </bean>


    <bean id="stringConverter" class="org.springframework.http.converter.StringHttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/plain;charset=UTF-8</value>
            </list>
        </property>
    </bean>
    <bean id="customObjectMapper" class="com.aifule.jxc.site.common.CustomObjectMapper"></bean>
    <!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
    <bean
            class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="stringConverter"/>
                <ref bean="jsonConverter"/>
            </list>
        </property>
    </bean>
    <!-- 定义跳转的文件的前后缀 ，视图模式配置-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 默认编码 -->
        <property name="defaultEncoding" value="utf-8"/>
        <!--文件大小最大值-->
        <property name="maxUploadSize" value="10485600"/>
        <!--resolveLazily属性启用是为了推迟文件解析，以便在UploadController 中捕获文件大小异常-->
        <property name="resolveLazily" value="true"/>

        <!-- 内存中的最大值 -->
        <property name="maxInMemorySize" value="40960"/>
    </bean>


    <mvc:annotation-driven/>


    <!--	<mvc:interceptors>
            &lt;!&ndash; 多个拦截器，顺序执行 &ndash;&gt;
            <mvc:interceptor>
                &lt;!&ndash; /** 表示所有的url，包括子url路径 &ndash;&gt;
                <mvc:mapping path="/**"/>
                <bean class="LoginHandlerIntercepter"></bean>
            </mvc:interceptor>
            &lt;!&ndash; 配置登陆拦截器 &ndash;&gt;
            <mvc:interceptor>
                <mvc:mapping path="/**"/>
                <bean class="LoginHandlerIntercepter"></bean>
            </mvc:interceptor>
        </mvc:interceptors>-->


    <!--
        <mvc:interceptors>
            <mvc:interceptor>
                <mvc:mapping path="/**" />
                    <bean class="CrossDomainInterceptor">
                </bean>
            </mvc:interceptor>
            <mvc:interceptor>
                <mvc:mapping path="/**" />
                    <bean class="LoginValidInterceptor">
                        <property name="failPage" value="/portal" />
                    </bean>
            </mvc:interceptor>
        </mvc:interceptors>
    -->

    <!--    <import resource="application-context-aop.xml"></import>-->

</beans>